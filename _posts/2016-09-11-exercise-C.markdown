---
tags:
  - C程序
layout: post
title: 'C程序练习'
category: 编程
---
一些练习题。

<!--more-->

### 一、

***

#### 题目描述

兰博和提莫闲聊之后，回归到了他们的正题，约德尔人的未来。

说起约德尔人的未来，黑默丁格曾经提出了一个约德尔测试，将约德尔人的历史的每个阶段都用一个字符表达出来。(包括可写字符,不包括空格。)。然后将这个字符串转化为一个01串。转化规则是如果这个字符如果是字母或者数字，这个字符变为1,其它变为0。然后将这个01串和黑默丁格观测星空得到的01串做比较，得到一个相似率。相似率越高,则约德尔的未来越光明。

请问:相似率为多少？

 输入

每组输入数据为两行，第一行为有关约德尔人历史的字符串，第二行是黑默丁格观测星空得到的字符串。

(两个字符串的长度相等,字符串长度不小于1且不超过1000。)

	
样例输入

@!%12dgsa

010111100

输出

输出一行，在这一行输出相似率。用百分数表示。(相似率为相同字符的个数/总个数,精确到百分号小数点后两位。printf("%%");输出一个%。)

#### 代码

```C

#include <stdio.h>
#include <string>
int main()
{
	char s[1000], ss[1000];
	float i = 0,ii;
	scanf("%s", s);
	scanf("%s", ss);
	ii = strlen(s);
	for (int j = 0; j < ii; j++)
	{
		if (s[j] >= 'a'&&s[j] <= 'z' || s[j] >= 'A'&&s[j] <= 'Z' || s[j] >= '0'&&s[j] <= '9')
			s[j] = '1';
		else s[j] = '0';
		if (s[j]==ss[j])
			i++;
	}
	printf("%.2f%%", i / ii*100);
}

```

***

K 近邻算法采用不同测量不同特征值之间的距离方法进行分类。

优点：精度高、对异常值不敏感、无数据输入假定。

缺点：计算复杂度高、空间复杂度高。

适用数据范围：数值型和标准型。


### 距离度量：

***

k 近邻模型的特征空间一般是 $n$ 维实向量空间 $R^n$，可采用欧式距离进行度量，或者更一般的 $L_p$ 距离：

$$L_p(x,y)= \left( \sum_{i=1}^n \vert x_i - x_j \vert ^p\right)^ \frac{1}{p},p \geq 1$$



